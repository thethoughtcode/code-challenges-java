# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: |

            VALUE=$(env | grep "CODACY" | cut -d= -f2)

            echo "=============="
            echo $VALUE
            echo "=============="

            export PROJECT_NAME="code-challenges-java"
            export SONAR_TOKEN="${ENV_SONAR_TOKEN_CODE_CHALLENGES_JAVA}"
            export COVERAGE_FILE="jacoco-report/target/site/jacoco-aggregate/jacoco.xml"
            export CODACY_PROJECT_NAME="$PROJECT_NAME"

            export SONAR_ARGS="            -Dsonar.projectKey=thethoughtcode_${PROJECT_NAME}"
            export SONAR_ARGS="$SONAR_ARGS -Dsonar.organization=$ENV_SONAR_ORGANIZATION"
            export SONAR_ARGS="$SONAR_ARGS -Dsonar.host.url=https://sonarcloud.io"
            export SONAR_ARGS="$SONAR_ARGS -Dsonar.coverage.jacoco.xmlReportPaths=$COVERAGE_FILE"

            mvn -B clean verify sonar:sonar $SONAR_ARGS

            # Submit Coverage Data to Codacy
            bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r $COVERAGE_FILE

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test:
          context:
            - SONAR
            - CODACY
